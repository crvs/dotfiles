#Path to your oh-my-zsh configuration.
ZSH=/opt/oh-my-zsh

#ZSH_CUSTOM=$HOME/.dotfiles

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="dieter"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias mps=/opt/mps/mps
alias pms=/opt/mps/mps

# Google Search function
function search {
w3m "www.google.com/search?q=$(echo $@ | sed 's/ /+/g')"}

# command completion
autoload -U compinit
compinit
zstyle ':completion:*' menu select
setopt completealiases
setopt HIST_IGNORE_DUPS

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment following line if you want to  shown in the command execution time stamp
# in the history command output. The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|
# yyyy-mm-dd
HIST_STAMPS="mm/dd/yyyy"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# plugins=(git)
plugins=(ssh-agent last-working-dir cabal git archlinux mercurial vi-mode history-substring-search) # tilingaware)

source $ZSH/oh-my-zsh.sh

# User configuration
setopt vi

# Default Programs
nvimers=('marvin' 'cook')
vimers=('shaggydog')
if [[ " ${nvimers[*]} " == *`hostname`* ]];
    then export EDITOR="vim";
    else export EDITOR="vi";
fi

export PAGER="less"
export BROWSER="firefox"
export MOVPLAY="mplayer"
export PICVIEW="feh"
export SNDPLAY="mplayer"
export TERMINAL="xterm"

# File Extesions
for ext in html org php com net no; do alias -s $ext=$BROWSER; done
for ext in txt tex; do alias -s $ext=$EDITOR; done
for exit in png jpg gif; do alias -s $ext=$PICVIEW; done
for ext in mpg wmv avi mkv; do alias -s $ext=$MOVPLAY; done
for ext in wav mp3 ogg; do alias -s $ext=$SNDPLAY; done


export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
# ruby stuff
export PATH=$PATH:$HOME/.gem/ruby/2.2.0/bin
# user pip stuff
export PATH=$PATH:$HOME/.local/bin

# export MANPATH="/usr/local/man:$MANPATH"

# java classes
export CLASSPATH=$CLASSPATH:~/.javapackages/algs4.jar

# # Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"
typeset -A key

key[Up]=${terminfo[kcuul]}
key[Down]=${terminfo[kcudl]}

[[ -n "${key[Up]}"   ]] && bindkey "${key[Up]}"   up-line-or-history   # history-beginning-search-backward
[[ -n "${key[Down]}" ]] && bindkey "${key[Down]}" down-line-or-history # history-beginning-search-forward

if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        printf '%s' "${terminfo[smkx]}"
    }
    function zle-line-finish () {
        printf '%s' "${termifo[rmkx]}"
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi
source ~/.aliases

PATH=$HOME/.rvm/bin:$PATH # Add RVM to PATH for scripting
PATH=$HOME/.dotfiles/bin:$PATH # user scripts
PATH=/opt/ghci-color:$PATH # ghci with color
PATH=/usr/bin/vendor_perl:$PATH

PATH=$HOME/.cabal/bin:$PATH # haskell binary files
for build in `ls $HOME/.cabal-sandbox`;
    do if [[ -d $HOME/.cabal-sandbox/$build/bin ]];
        then PATH=$HOME/.cabal-sandbox/$build/bin:$PATH;
        fi;
    done

# vi mode indicator
function cabalprompt { if [[ "$(cabal_sandbox_info)" != "" ]] ; then echo $(cabal_sandbox_info)' '; fi }
PROMPT=$PROMPT'$(cabalprompt)'
RPS1='$(vi_mode_prompt_info)'$RPS1

#grep warning
# GREP=
if [[ -x /usr/bin/grep ]]
then alias grep="/usr/bin/grep $GREP_OPTIONS"
else alias grep="/bin/grep $GREP_OPTIONS"
fi
unset GREP_OPTIONS

#setup ros environment
#source /opt/ros/indigo/setup.zsh

#source ~/.dotfiles/haskell/completion.zsh
#[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
#source ~/catkin_ws/devel/setup.sh

export HOSTALIASES=~/Sync/hosts
