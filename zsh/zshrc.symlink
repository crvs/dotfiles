# set the shell variable (for tmux)
SHELL=/usr/bin/zsh

#Path to your oh-my-zsh configuration.
ZSH=/opt/oh-my-zsh
if [ -d $ZSH ]; then
    #ZSH_CUSTOM=$HOME/.dotfiles

    # Set name of the theme to load.
    # Look in ~/.oh-my-zsh/themes/
    # Optionally, if you set this to "random", it'll load a random theme each
    # time that oh-my-zsh is loaded.
    ZSH_THEME="dst" # fancy theme: "agnoster"

    zstyle ':completion:*' menu select
    setopt completealiases
    setopt HIST_IGNORE_DUPS

    # CASE_SENSITIVE="true" # case sensitive completion
    # DISABLE_AUTO_UPDATE="true" # disable update prompts
    # UPDATE_ZSH_DAYS=13 # change how often auto-updates occur
    # DISABLE_LS_COLORS="true"
    # DISABLE_AUTO_TITLE="true"
    # DISABLE_CORRECTION="true" # command autocorrection

    # Uncomment following line if you want red dots to be displayed while waiting for completion
    COMPLETION_WAITING_DOTS="true"

    # Uncomment following line if you want to disable marking untracked files under
    # VCS as dirty. This makes repository status check for large repositories much,
    # much faster.
    # DISABLE_UNTRACKED_FILES_DIRTY="true"

    # Uncomment following line if you want to  shown in the command execution time stamp
    # in the history command output. The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|
    # yyyy-mm-dd
    HIST_STAMPS="mm/dd/yyyy"

    # Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
    # Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
    # Example format: plugins=(rails git textmate ruby lighthouse)
    plugins=(ssh-agent \
        gpg-agent \
        last-working-dir\
        cabal \
        git \
        archlinux \
        mercurial \
        vi-mode \
        history-substring-search)

    source $ZSH/oh-my-zsh.sh
fi

# Google Search function
function search {
w3m "www.google.com/search?q=$(echo $@ | sed 's/ /+/g')"}

# command completion
autoload -U compinit
compinit
# User configuration
setopt vi

# Default Programs
export EDITOR="vim";
export PAGER="less"
export BROWSER="firefox"
export MOVPLAY="mplayer"
export PICVIEW="eog"
export SNDPLAY="mplayer"
export TERMINAL="gnome-terminal"
export TERM="xterm-256color"

# File Extesions
for ext in html org php com net no; do alias -s $ext=$BROWSER; done
for ext in txt tex; do alias -s $ext=$EDITOR; done
for ext in png jpg gif; do alias -s $ext=$PICVIEW; done
for ext in mpg wmv avi mkv; do alias -s $ext=$MOVPLAY; done
for ext in wav mp3 ogg; do alias -s $ext=$SNDPLAY; done


# binary paths under / ; /usr ; /usr/local
export PATH=/bin:/sbin # root
export PATH=$PATH:/usr/bin:/usr/sbin:/usr/games # /usr
export PATH=$PATH:/usr/local/bin:/usr/local/sbin:/usr/local/games # /usr/local

# paths under $HOME
export PATH=$HOME/.dotfiles/bin:$PATH
export PATH=$HOME/.local/bin:$PATH

#cuda
export PATH=$PATH:/opt/cuda/bin

# export MANPATH="/usr/local/man:$MANPATH"

# # Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

## search backwards in history
typeset -A key
key[Up]=${terminfo[kcuul]}
key[Down]=${terminfo[kcudl]}

[[ -n "${key[Up]}"   ]] && bindkey "${key[Up]}"   up-line-or-history   # history-beginning-search-backward
[[ -n "${key[Down]}" ]] && bindkey "${key[Down]}" down-line-or-history # history-beginning-search-forward

if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        printf '%s' "${terminfo[smkx]}"
    }
    function zle-line-finish () {
        printf '%s' "${termifo[rmkx]}"
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi

BASE16_SHELL=$HOME/.config/base16-shell/
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"
alias base16="sed -n '4s/^\# \(.*\) scheme .*$/\1/p' ~/.base16_theme"

export LLDB=/usr/bin/lldb
export HOSTALIASES=~/Sync/hosts

function resource() {rehash; source ~/.zshrc; echo "rehashed and reloaded zshrc";}

export RPS1=$RPS1$CONTAINER_NAME

function add_man() {
    # Add the man directory in this directory to the extra manpages. Use the
    # name given
    ln -s $PWD/man $HOME/.man/$1
}

for f in `ls -1 $HOME/.man`; do
    export MANPATH=$MANPATH:$HOME/.man/$f
done


for f in $(find ~/.dotfiles -name "*.zsh"); do
    source $f;
done
